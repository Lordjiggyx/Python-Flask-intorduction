====== Setup ======

To start using flask the first thing you must actually do is to install it we will do this using pip by running the following command in the terminal

pip install flask

====== Starting a flask application ======

To start in whatever file you plan to run the application in you must import flask

Then you must declare an instance of flask passing in the __name__  keyword


Now for every method you declare in your application it must preceed with an annotattion indictaing the route of the method

@app.route() method passing in a string for the route 

you can then call the app.run() method to run the application

**When you dun a python application it is worthy to note that you can pass in the debug value this allows you to see if there is any errors regarding the application **

You can run the application using command line ot just running it in vscode like usual

once the file has been saved and you run it you can go to localhost:5000 and then you will see the message corresponfing to the home route

====== What flask does ======

Flask maps http requests to functions, this process is known as routing, this is almost like what you did in relation to node and express 


====== Creating an API ======
To create this API we need data 

we plan to add data to ou API using dictionaries, these dictionaries act as Json objects would using key pair values 


In this example we have 3 objects with the following keys , id , title , author , first_sentence and the year it was published

==GET ALL==

A method called get_all is created as you can see the route is definede to "/api/Books" and in this method we use jsoonify to send the dictionary as a json object

jsoonify must be imported as it is a flask function

==GETTING BY INDEX==

To get an item by index  we can pass its identifying information as part of a url parameter and then create a local variable to represent the value 

To access url parameters we use the request object, this object must be imported from flask as well as jsonify, 

you must then use the request.args to identify the parameter

if the parameter is in the request then set it to a local variable in the method 

then you can create an empty list 

and then from there yu can loop through your data and get the object with the matching index and append it to this empty list and then return it

to add parameters to a url that will be used in python you must use a ? before the name and then equal it to a value

localhost:5000/api/getID?id=1


==UPDATE BY INDEX==

Update works pretty much the same as the the getting by index the only difference is that you will be changing the objects value the way you would normmally in python

say we obtain it by id and we want to be able to change the author name we get the object in the same way and then change it by setting it to a new value